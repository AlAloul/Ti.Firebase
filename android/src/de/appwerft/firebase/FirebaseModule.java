/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.firebase;

import java.io.IOException;
import java.io.InputStream;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.io.TiBaseFile;
import org.appcelerator.titanium.io.TiFileFactory;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;

import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.auth.FirebaseAuth;

import java.util.*;

@Kroll.module(name = "Tifirebase", id = "de.appwerft.firebase")
public class FirebaseModule extends KrollModule {
	public static FirebaseAuth auth;
	public static Context ctx;
	private static String apiKey;
	private static String applicationId;
	private static String databaseUrl;
	private static String gcmSenderId;
	private static String storageBucket;
	public static Activity activity;

	private static TiApplication app;
	public static final String LCAT = "FiBa üöùüöù";

	public FirebaseModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication _app) {
		ctx = _app.getApplicationContext();
		app = _app;
		activity = _app.getCurrentActivity();
	}

	@Kroll.method
	public void initFirebase(KrollDict opts) {
		String packageName = TiApplication.getAppCurrentActivity()
				.getPackageName();
		try {
			JSONObject json = new JSONObject(loadJSONFromAsset());
			JSONObject projectInfo = json.getJSONObject("project_info");
			storageBucket = projectInfo.getString("storage_bucket");
			databaseUrl = projectInfo.getString("firebase_url");
			gcmSenderId = projectInfo.getString("project_number");
			JSONArray clients = json.getJSONArray("client");
			for (int i = 0; i < clients.length(); i++) {
				JSONObject clientInfo = clients.getJSONObject(i).getJSONObject(
						"client_info");
				String pName = clientInfo.getJSONObject("android_client_info")
						.getString("package_name");
				if (pName.equals(packageName)) {
					applicationId = clientInfo.getString("mobilesdk_app_id");
					apiKey = clients.getJSONObject(i).getJSONObject("api_key")
							.getString("current_key");
				}
			}
		} catch (JSONException e) {
			e.printStackTrace();
		}
/*
		if (opts.containsKeyAndNotNull("apiKey"))
			apiKey = opts.getString("apiKey");
		if (opts.containsKeyAndNotNull("applicationId"))
			applicationId = opts.getString("applicationId");
		if (opts.containsKeyAndNotNull("databaseUrl"))
			databaseUrl = opts.getString("databaseUrl");
		if (opts.containsKeyAndNotNull("gcmSenderId"))
			gcmSenderId = opts.getString("gcmSenderId");
		if (opts.containsKeyAndNotNull("storageBucket"))
			storageBucket = opts.getString("storageBucket");
			*/
		FirebaseApp.initializeApp(
				ctx,
				new FirebaseOptions.Builder().setApiKey(apiKey)
						.setApplicationId(applicationId)
						.setDatabaseUrl(databaseUrl)
						.setGcmSenderId(gcmSenderId)
						.setStorageBucket(storageBucket).build());
		auth = FirebaseAuth.getInstance();
	}

	public String loadJSONFromAsset() {
		String json = null;
		try {
			String url = resolveUrl(null, "google-services.json");
			TiBaseFile file = TiFileFactory.createTitaniumFile(
					new String[] { url }, false);
			InputStream is = file.getInputStream();
			int size = is.available();
			byte[] buffer = new byte[size];
			is.read(buffer);
			is.close();
			json = new String(buffer, "UTF-8");
		} catch (IOException ex) {
			ex.printStackTrace();
			return null;
		}
		return json;
	}
}
